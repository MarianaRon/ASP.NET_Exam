@using ASP.NET_Exam.Data
@using ASP.NET_Exam.Data.Schema
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@model ASP.NET_Exam.Data.Schema.Schedule
@inject ApplicationDataContext DataContext
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Schedule</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GroupSize)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GroupSize) /
            @Html.DisplayFor(model => model.MaxGroupSize)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartDateTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartDateTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Trainer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Trainer!.UserName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Hall)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Hall!.Name)
        </dd>
    </dl>
</div>
<div>
    @if (User.IsInRole("Manager")) {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
        <span>|</span>
    }
    @if (User.IsInRole("Client")) {
        var user = await UserManager.GetUserAsync(User);
        var schedule = await DataContext.ApplicationUserSchedules!.Where(aus => aus.ScheduleId == Model.Id && aus.UserId == user!.Id).FirstOrDefaultAsync();
        if (schedule is null) {
            <form asp-controller="ApplicationUserSchedules" asp-action="Enroll" asp-route-scheduleId="@Model.Id">
                <button type="submit" class="btn btn-outline-primary">Enroll</button>
            </form>
        }
        else {
            <form asp-controller="ApplicationUserSchedules" asp-action="Unsubscribe" asp-route-scheduleId="@Model.Id">
                <button type="submit" class="btn btn-outline-danger">Unsubscribe</button>
            </form>
        }
    }
    <a asp-action="Index">Back to List</a>
</div>